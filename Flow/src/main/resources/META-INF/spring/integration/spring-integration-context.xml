<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-file="http://www.springframework.org/schema/integration/file"
	xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/integration
                        http://www.springframework.org/schema/integration/spring-integration-2.1.xsd
                        http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/integration/file
					    http://www.springframework.org/schema/integration/file/spring-integration-file-2.1.xsd
                        http://www.springframework.org/schema/integration/xml
					    http://www.springframework.org/schema/integration/xml/spring-integration-xml-2.1.xsd
					    http://www.springframework.org/schema/integration/http
    					http://www.springframework.org/schema/integration/http/spring-integration-http-2.1.xsd
					    ">

    <context:component-scan base-package="com.flexion.demo.mvc.controller" />

	<import resource="MongoContext.xml"/>
	
	<int-file:inbound-channel-adapter id="poller"
		directory="file:/tmp/dropbox" prevent-duplicates="true"
		filename-pattern="*QUALITY.xml" >
           <int:poller fixed-delay="10"  time-unit="SECONDS" max-messages-per-poll="1" />
           </int-file:inbound-channel-adapter>


	<bean id="transformer" class="com.flexion.demo.service.Transformer"
		abstract="false" />
	<bean id="xml2dom" class="com.flexion.demo.service.XML2DOM"/>

	<int:transformer input-channel="parsechan" id="parser" ref="xml2dom"
		output-channel="domchan">
	</int:transformer>


	<int:transformer id="cleaner" input-channel="cleanchan"
		output-channel="donechan">
		<bean class="com.flexion.demo.service.Cleaner"/>
		<int:poller fixed-delay="100" max-messages-per-poll="1"/>
	</int:transformer>

	<int:channel id="parsechan">
		<int:interceptors>
			<int:wire-tap channel="dropper" />
		</int:interceptors>
	</int:channel>
	
<!-- 	<int-file:outbound-channel-adapter id="dropper" 
		directory="file:/tmp/dropbox"
		filename-generator-expression="'out-' + payload.name"
		delete-source-files="false"
		/>
		 -->
		 
	<int:outbound-channel-adapter id="dropper" ref="homeController" method="note">
	</int:outbound-channel-adapter>
	
<!-- 	
	<int:outbound-channel-adapter id="mongo" method="store" ref="store"
		channel="donechan">
    </int:outbound-channel-adapter>
     -->

	<!-- 
    Implement MWS polling with MethodInvoking... as a first cut. (Can implement full MessageProducer later).
    Use code from File classes to implement duplicate filtering?
    
    Sources:
    - orders
    - document feed: feed results
    - document feed: payments
    - ftp: shipments
    - ftp: inventory
    
    Destinations:
    - ftp: orders
    - document feed: shipments
    - document feed: inventory
    - ftp: payments 
    
    Wiretap:
    - Raw messages
    
    
     -->
    
    
    <int-xml:xpath-transformer id="extract"
    	xpath-expression="//Result/date | //Result/time | //Result/zone | //Result/ResultDescription/CharacteristicName | //Result//ResultMeasureValue | //Result//MeasureUnitCode"
    	evaluation-type="NODE_LIST_RESULT" output-channel="mapchan"
    	input-channel="nodechan">
    </int-xml:xpath-transformer>


    <int-xml:xpath-splitter id="result-splitter" input-channel="domchan" create-documents="true"
    	output-channel="nodechan" >
    	<int-xml:xpath-expression expression="/Results/Result"/>
    </int-xml:xpath-splitter>
    
    <int:channel id="domchan"></int:channel>

	<int:channel id="nodechan">
		<!--  
		<int:interceptors>
			<int:wire-tap channel="logger01" />
		</int:interceptors>
		 -->
	</int:channel>
<!-- 	<int:logging-channel-adapter id="logger01" level="DEBUG"/> -->
    
    <int-http:outbound-channel-adapter id="gae"
    	url="http://localhost:8084/well/{well}?d={d}&amp;u={u}&amp;v={v}&amp;c={c}"
    	http-method="PUT" channel="donechan"
    >
	    <int-http:uri-variable name="well" expression='payload.get("well")'/>
	    <int-http:uri-variable name="d" expression='payload.get("datetime")'/>
	    <int-http:uri-variable name="v" expression='payload.get("ResultMeasureValue")'/>
	    <int-http:uri-variable name="c" expression='payload.get("CharacteristicName")'/>
	    <int-http:uri-variable name="u" expression='payload.get("MeasureUnitCode")'/>
    </int-http:outbound-channel-adapter>
	
	<int:transformer input-channel="mapchan" id="toMap"
		output-channel="cleanchan">
		<bean class="com.flexion.demo.service.Nodes2Map"/>
	</int:transformer>
	<int:channel id="mapchan"></int:channel>
	<int:channel id="cleanchan">
			<int:queue capacity="8000"/>
	</int:channel>
	
	<int:header-enricher id="file-name-recorder" input-channel="poller"
		output-channel="parsechan">	
		<int:header name="filename" expression="payload.name"/>
	</int:header-enricher>
	<int:channel id="donechan"></int:channel>
</beans>
